; A file parsed for a scene must contain the "scene" section minimum.
; Other available section types:
;  - light
;  - sphere
;  - plane
;
; The fields that have a '=' sign followed by a value in comments can be omitted and the default value will be applied
; The vector fields may represent mathematical vectors or points in space. They must be 3-dimensional, acceptable delimiters are parentheses '()' or square brackets '[]' or no delimiters. And must always hold valid floating point numbers in their fields.

; SCENE:
; 
; Defines some global scene parameters. Must be called "scene".
; It must contain the following fields:
;  - I_a: float (ambient light intensity, between 0-1)
;  - bg_color: hex =#3D1A28 (background color)
;  - ambient_color: hex =#FFFFFF (ambient light's color)

[scene]
I_a = 0.35
bg_color = #3a1725
ambient_color = #ffffff

; LIGHTS:
;
; Light sections can take any name as long as it is prefixed by "light"
; it must contain the following fields:
;  - position: vec
;  - intensity: float ( > 0  (recommended 0-1))
;  - C1: float
;  - C2: float
;  - C3: float
;  (attenuation factors)
;  - color: hex =#FFFFFF

;[light_main]
;position = [25, 110, 10]
;intensity = 1.0
;C1 = 0.01
;C2 = 0.001
;C3 = 0.0001

[light_main_red]
position = [25, 110, 10]
intensity = 2.5
C1 = 0.01
C2 = 0.001
C3 = 0.0001
color = #FF1111

[light_blue]
position = 100, 10, 10
intensity = 1.5
C1 = 0.01
C2 = 0.001
C3 = 0.0001
color = #4444FF
;
;[light_green]
;position = (10, 10, -10) 
;intensity = 1.2
;C1 = 0.01
;C2 = 0.0001
;C3 = 0.00001
;color = #22FF22


; OBJECT PARAMETERS
;
; These are parameters relating to how objects interact with light that all objects have in common. 
; Those with a range specified will be clamped towards that range if a value outside of it is specified.
; Extra care should be taken with the transparency and reflection fields though, they must never sum to more than 1 or else the program will exit without rendering anything.
; - color: hex
; - K_a: float = 1 (ambient lighting factor, between 0-1)
; - K_d: float (diffuse reflection coefficient, between 0-1)
; - K_s: float (speculative reflection coefficient, between 0-1)
; - K_n: float = 50 (hardness, >1)
; - reflection: float = 0.0
; - checkerboard: float = 0.0 (If you assign a value to this parameter then the object will have a checkerboard pattern with white tiles and colored tiles (of the object's color). The value you assign will be the size of the tiles, >0)

; SPHERES:
; 
; Sphere sections can take any name as long as it is prefixed by "sphere",
; It must contain the following fields in addition to those specified in OBJECT PARAMETERS:
; - center: vec
; - radius: f64

[sphere_red]
center = (70, 65, 55)
radius = 35.0
color = #f02020
K_d = 0.6
K_s = 0.4
reflection = 0.5

[sphere_blue]
center = (40, 20, 90)
r = 25.0
color = #2020f0
K_a = 0.67
K_d = 0.33
K_s = 0.67

[sphere tiny white]
center = (40, 97, 25)
r = 5
color = #ffffff
K_d = 0.7
K_s = 0.3
checkerboard = 5

[sphere transparent]
center = (55, 42, 15)
r = 13
color = #ffffff
K_a = 0.8
K_d = 0.7
K_s = 1
K_n = 100
transparency = 0.80

[sphere both]
center = (0, 60, 50)
r = 25
color = #44ff44
K_a = 0.67
K_d = 0.33
K_s = 0.67
transparency = 0.5
reflection = 0.45

; CYLINDERS:
; 
; Sphere sections can take any name as long as it is prefixed by "sphere",
; It must contain the following fields in addition to those specified in OBJECT PARAMETERS:
; - anchor: vec
; - dir: vec
; - radius: f64
; - length: f64

[cylinder_green]
anchor = (105, -20, 90)
dir = (-1, 1.0, -1.75)
length = 70
radius = 15.0
color = #2ca01a
K_d = 0.8
K_s = 0.4
;transparency = 0.2
; reflection = 0.5
checkerboard =2

[cylinder_red]
anchor = (50, -20, 50)
dir = (1, 1.0, 0)
length = 80
radius = 15.0
color = #aa4444
K_d = 0.8
K_s = 0.4
transparency = 0.2
checkerboard =15

; PLANES:
;
; Planes sections can take any name as long as it is prefixed by "plane"
; It must contain the following fields in addition to those specified in OBJECT PARAMETERS:
; - point: vec (point inside of plane)
; - normal: vec (normal vector to plane)
; - color: hex

[plane_floor]
point = (0, -10, 0)
normal = 0, 1, 0
color = #c6c4b8
;color = #3333dd
K_a = 0.67
K_d = 0.33
K_s = 0.67
;reflection = 0.3
checkerboard = 60

[plane back mirror]
point = (0, 0, -100)
normal = 0, 0, 1
color = #ffffff
K_a = 0.67
K_d = 0.33
K_s = 0.67
reflection = 1.65
